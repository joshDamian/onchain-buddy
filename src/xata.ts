// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "UserProfiles",
    columns: [
      {
        name: "displayName",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: "''::text",
      },
      {
        name: "phoneNumber",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
      },
      {
        name: "walletAddresses",
        type: "multiple",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "WalletSubscriptions",
    columns: [
      {
        name: "subscriberPhoneNumber",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: "''::text",
      },
      {
        name: "walletAddress",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: "''::text",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type UserProfiles = InferredTypes["UserProfiles"];
export type UserProfilesRecord = UserProfiles & XataRecord;

export type WalletSubscriptions = InferredTypes["WalletSubscriptions"];
export type WalletSubscriptionsRecord = WalletSubscriptions & XataRecord;

export type DatabaseSchema = {
  UserProfiles: UserProfilesRecord;
  WalletSubscriptions: WalletSubscriptionsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Blocverse-Development-es1pni.us-east-1.xata.sh/db/onchain-buddy",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
